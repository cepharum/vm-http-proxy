/**
 * This file is part of cepharum's vm-http-proxy.
 *
 * vm-http-proxy - http proxy routing incoming requests to LXC vm instances
 * 
 * Copyright (C) 2014 cepharum GmbH, Berlin
 * 
 * vm-http-proxy is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * vm-http-proxy is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/.
 */

module.exports = {

	/**
	 * IP address to listen on for incoming HTTP/HTTPS requests (default is 0.0.0.0)
	 */

	ipAddress: "123.45.67.89",

	/**
	 * pathname of root folder containing all LXC VMs
	 */

	lxcRootFolder : "/var/lib/lxc",

	/**
	 * switch turning on/off HTTPS support on port 443
	 */

	enableHttps : true,

        /**
         * provide name of HTTPS host proxying all requests for sharing single certificate
	 *
	 * Incoming HTTPS requests on this hostname are expected to select VM by name as
	 * prefix of URL's pathname. Omit this property here for proxy always expecting
	 * name of addressed VM this way on HTTPS requests.
         */

        sslHostname : 'secure.example.com',

	/**
	 * filename of certificate file to use on providing HTTPS
	 */

	certificateFilename : "/etc/ssl/snakeoil.cert.pem",

	/**
	 * set true to redirect all http requests to https using same domain and path
	 */

	forceHttps: false,

	/**
	 * filename of certificate's key file to use on providing HTTPS
	 */

	certificateKeyFilename : "/etc/ssl/snakeoil.key.pem",

	/**
	 * select VM plugin to operate with
	 */

	vmPlugin : require( "./lib/lxc" ),

	/**
	 * selects minimum level of messages to be logged
	 *
	 * choose one of: debug, info, error
	 */

	minLogLevel : "info",

	/**
	 * list of hostname rewrites
	 *
	 * This list is processed prior to looking up virtual machine matching
	 * hostname of current request. It is working on request's hostname, only.
	 */

	rewrites: [
		{ from: "some.host.name", to: "some.new.host.name" },
		{ from: /^matching\.hostname\.(.+)$/, to: "replacing.hostname.$1" }
	],

	/**
	 * set of redirection rules
	 *
	 * redirections are precede any request forwarding and may be used e.g. to
	 * force use of HTTPS on accessing a site
	 *
	 * @note: keep unset or empty list to disable redirection code for slightly
	 *        improved performance
	 */

	redirections : [
		[ /^http:\/\/(www.)?mydomain.com\/(.*)$/, "https://secure.mydomain.com/www.mydomain.com/$2" ],
		[ /^htts:\/\/(www2.)?mydomain.com\/(.*)$/, "https://secure.mydomain.com/www.mydomain.com/$2" ],
	]
};
